<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doccure.BE.mapper.DoctorSpecializationMapper">
  <resultMap id="BaseResultMap" type="com.doccure.BE.model.DoctorSpecialization">
    <id column="DOCTOR_SPECIALIZATION_ID" jdbcType="NUMERIC" property="doctorSpecializationId" />
    <result column="DOCTOR_ID" jdbcType="NUMERIC" property="doctorId" />
    <result column="SPECIALIZATION_ID" jdbcType="NUMERIC" property="specializationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    DOCTOR_SPECIALIZATION_ID, DOCTOR_ID, SPECIALIZATION_ID
  </sql>
  <select id="selectByExample" parameterType="com.doccure.BE.model.DoctorSpecializationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DOCTOR_SPECIALIZATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from DOCTOR_SPECIALIZATION
    where DOCTOR_SPECIALIZATION_ID = #{doctorSpecializationId,jdbcType=NUMERIC}
  </select>

   <select id="selectByDoctorAndSpecId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from DOCTOR_SPECIALIZATION
    where DOCTOR_ID = #{doctorId,jdbcType=NUMERIC}
    AND SPECIALIZATION_ID = #{specializationId,jdbcType=NUMERIC}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from DOCTOR_SPECIALIZATION
    where DOCTOR_SPECIALIZATION_ID = #{doctorSpecializationId,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.doccure.BE.model.DoctorSpecializationExample">
    delete from DOCTOR_SPECIALIZATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doccure.BE.model.DoctorSpecialization">
    insert into DOCTOR_SPECIALIZATION (DOCTOR_SPECIALIZATION_ID, DOCTOR_ID, 
      SPECIALIZATION_ID)
    values (#{doctorSpecializationId,jdbcType=NUMERIC}, #{doctorId,jdbcType=NUMERIC}, 
      #{specializationId,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.doccure.BE.model.DoctorSpecialization">
    insert into DOCTOR_SPECIALIZATION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorSpecializationId != null">
        DOCTOR_SPECIALIZATION_ID,
      </if>
      <if test="doctorId != null">
        DOCTOR_ID,
      </if>
      <if test="specializationId != null">
        SPECIALIZATION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorSpecializationId != null">
        #{doctorSpecializationId,jdbcType=NUMERIC},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=NUMERIC},
      </if>
      <if test="specializationId != null">
        #{specializationId,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doccure.BE.model.DoctorSpecializationExample" resultType="java.lang.Long">
    select count(*) from DOCTOR_SPECIALIZATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DOCTOR_SPECIALIZATION
    <set>
      <if test="row.doctorSpecializationId != null">
        DOCTOR_SPECIALIZATION_ID = #{row.doctorSpecializationId,jdbcType=NUMERIC},
      </if>
      <if test="row.doctorId != null">
        DOCTOR_ID = #{row.doctorId,jdbcType=NUMERIC},
      </if>
      <if test="row.specializationId != null">
        SPECIALIZATION_ID = #{row.specializationId,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DOCTOR_SPECIALIZATION
    set DOCTOR_SPECIALIZATION_ID = #{row.doctorSpecializationId,jdbcType=NUMERIC},
      DOCTOR_ID = #{row.doctorId,jdbcType=NUMERIC},
      SPECIALIZATION_ID = #{row.specializationId,jdbcType=NUMERIC}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doccure.BE.model.DoctorSpecialization">
    update DOCTOR_SPECIALIZATION
    <set>
      <if test="doctorId != null">
        DOCTOR_ID = #{doctorId,jdbcType=NUMERIC},
      </if>
      <if test="specializationId != null">
        SPECIALIZATION_ID = #{specializationId,jdbcType=NUMERIC},
      </if>
    </set>
    where DOCTOR_SPECIALIZATION_ID = #{doctorSpecializationId,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doccure.BE.model.DoctorSpecialization">
    update DOCTOR_SPECIALIZATION
    set DOCTOR_ID = #{doctorId,jdbcType=NUMERIC},
      SPECIALIZATION_ID = #{specializationId,jdbcType=NUMERIC}
    where DOCTOR_SPECIALIZATION_ID = #{doctorSpecializationId,jdbcType=NUMERIC}
  </update>
</mapper>