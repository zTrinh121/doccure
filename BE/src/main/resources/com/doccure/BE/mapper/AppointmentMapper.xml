<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doccure.BE.mapper.AppointmentMapper">
  <resultMap id="BaseResultMap" type="com.doccure.BE.model.Appointment">
    <id column="APPOINTMENT_ID" jdbcType="NUMERIC" property="appointmentId" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="PRICE" jdbcType="NUMERIC" property="price" />
    <result column="SLOT_ID" jdbcType="NUMERIC" property="slotId" />
    <result column="DOCTOR_SPECIALIZATION_ID" jdbcType="NUMERIC" property="doctorSpecializationId" />
    <result column="USER_ID" jdbcType="NUMERIC" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    APPOINTMENT_ID, STATUS, PRICE, SLOT_ID, DOCTOR_SPECIALIZATION_ID, USER_ID
  </sql>
  <select id="selectByExample" parameterType="com.doccure.BE.model.AppointmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from APPOINTMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from APPOINTMENT
    where APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from APPOINTMENT
    where APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.doccure.BE.model.AppointmentExample">
    delete from APPOINTMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doccure.BE.model.Appointment">
    insert into APPOINTMENT (APPOINTMENT_ID, STATUS, PRICE, 
      SLOT_ID, DOCTOR_SPECIALIZATION_ID, USER_ID
      )
    values (#{appointmentId,jdbcType=NUMERIC}, #{status,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC}, 
      #{slotId,jdbcType=NUMERIC}, #{doctorSpecializationId,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.doccure.BE.model.Appointment">
    insert into APPOINTMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appointmentId != null">
        APPOINTMENT_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="slotId != null">
        SLOT_ID,
      </if>
      <if test="doctorSpecializationId != null">
        DOCTOR_SPECIALIZATION_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appointmentId != null">
        #{appointmentId,jdbcType=NUMERIC},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="slotId != null">
        #{slotId,jdbcType=NUMERIC},
      </if>
      <if test="doctorSpecializationId != null">
        #{doctorSpecializationId,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doccure.BE.model.AppointmentExample" resultType="java.lang.Long">
    select count(*) from APPOINTMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update APPOINTMENT
    <set>
      <if test="row.appointmentId != null">
        APPOINTMENT_ID = #{row.appointmentId,jdbcType=NUMERIC},
      </if>
      <if test="row.status != null">
        STATUS = #{row.status,jdbcType=VARCHAR},
      </if>
      <if test="row.price != null">
        PRICE = #{row.price,jdbcType=NUMERIC},
      </if>
      <if test="row.slotId != null">
        SLOT_ID = #{row.slotId,jdbcType=NUMERIC},
      </if>
      <if test="row.doctorSpecializationId != null">
        DOCTOR_SPECIALIZATION_ID = #{row.doctorSpecializationId,jdbcType=NUMERIC},
      </if>
      <if test="row.userId != null">
        USER_ID = #{row.userId,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update APPOINTMENT
    set APPOINTMENT_ID = #{row.appointmentId,jdbcType=NUMERIC},
      STATUS = #{row.status,jdbcType=VARCHAR},
      PRICE = #{row.price,jdbcType=NUMERIC},
      SLOT_ID = #{row.slotId,jdbcType=NUMERIC},
      DOCTOR_SPECIALIZATION_ID = #{row.doctorSpecializationId,jdbcType=NUMERIC},
      USER_ID = #{row.userId,jdbcType=NUMERIC}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doccure.BE.model.Appointment">
    update APPOINTMENT
    <set>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=NUMERIC},
      </if>
      <if test="slotId != null">
        SLOT_ID = #{slotId,jdbcType=NUMERIC},
      </if>
      <if test="doctorSpecializationId != null">
        DOCTOR_SPECIALIZATION_ID = #{doctorSpecializationId,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=NUMERIC},
      </if>
    </set>
    where APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doccure.BE.model.Appointment">
    update APPOINTMENT
    set STATUS = #{status,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=NUMERIC},
      SLOT_ID = #{slotId,jdbcType=NUMERIC},
      DOCTOR_SPECIALIZATION_ID = #{doctorSpecializationId,jdbcType=NUMERIC},
      USER_ID = #{userId,jdbcType=NUMERIC}
    where APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC}
  </update>

  <!-- Appoinment Detail -->
  <resultMap id="BaseResultMapDetail" type="com.doccure.BE.model.AppointmentDetail">
    <id column="APPOINTMENT_ID" jdbcType="NUMERIC" property="appointmentId" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="PRICE" jdbcType="NUMERIC" property="price" />
    <result column="SLOT_ID" jdbcType="NUMERIC" property="slotId" />
    <result column="DOCTOR_SPECIALIZATION_ID" jdbcType="NUMERIC" property="doctorSpecializationId" />
    <result column="USER_ID" jdbcType="NUMERIC" property="userId" />

    <association property="doctor" javaType="com.doccure.BE.model.Doctor">
      <id column="DOCTOR_ID" jdbcType="NUMERIC" property="doctorId" />
      <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
      <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
      <result column="EXPERIENCE" jdbcType="NUMERIC" property="experience" />
      <result column="HOSPITAL" jdbcType="VARCHAR" property="hospital" />
      <result column="AVATAR" jdbcType="VARCHAR" property="avatar" />
    </association>

     <association property="slot" javaType="com.doccure.BE.model.SlotAppointment">
        <id column="SLOT_ID" jdbcType="NUMERIC" property="slotId" />
        <result column="DATE_SLOT" jdbcType="TIMESTAMP" property="dateSlot" />
        <result column="START_TIME" jdbcType="TIMESTAMP" property="startTime" />
        <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
        <result column="PRICE" jdbcType="NUMERIC" property="price" />
        <result column="STATUS" jdbcType="VARCHAR" property="status" />
    </association>

    <association property="specialization" javaType="com.doccure.BE.model.Specialization">
        <id column="SPECIALIZATION_ID" jdbcType="NUMERIC" property="specializationId" />
      <result column="SPECIALIZATION_NAME" jdbcType="VARCHAR" property="specializationName" />
    </association>

     <association property="invoice" javaType="com.doccure.BE.model.Invoice">
      <id column="INVOICE_ID" jdbcType="NUMERIC" property="invoiceId" />
      <result column="INVOICE_NAME" jdbcType="VARCHAR" property="invoiceName" />
      <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
      <result column="invoice_status" jdbcType="VARCHAR" property="status" />
      <result column="APPOINTMENT_ID" jdbcType="NUMERIC" property="appointmentId" />
      <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
     </association>
  </resultMap>

  <select id="getAppointmentDetailWithStatus" parameterType="map" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status, i.CREATED_AT, i.UPDATED_AT
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{params.userId, jdbcType=NUMERIC}
        AND a.status = #{params.status, jdbcType=VARCHAR}
  </select>

   <select id="getUpcomingAppointmentDetails" parameterType="Long" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{userId, jdbcType=NUMERIC}
        AND a.status = 'BOOKED'
        <![CDATA[
          AND s.start_datetime >= SYSTIMESTAMP
        ]]>
  </select>

  <select id="getAppointmentDetailWithStatusByDate" parameterType="map" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{params.userId, jdbcType=NUMERIC}
        AND a.status = #{params.status, jdbcType=VARCHAR}
        <if test="params.startDate != null and params.endDate != null">
          AND s.start_datetime BETWEEN #{params.startDate, jdbcType=DATE} AND #{params.endDate, jdbcType=DATE}
        </if>
        <if test="params.startDate != null and params.endDate == null">
          <![CDATA[
          AND s.start_datetime >= #{params.startDate, jdbcType=DATE}
          ]]>
        </if>
        <if test="params.startDate == null and params.endDate != null">
          <![CDATA[
          AND s.start_datetime <= #{params.endDate, jdbcType=DATE}
          ]]>
        </if>
  </select>

<select id="getUpcomingAppointmentDetailWithStatusByDate" parameterType="Long" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{userId, jdbcType=NUMERIC}
        AND a.status = 'BOOKED'
        <if test="params.startDate != null and params.endDate != null">
          AND s.start_datetime BETWEEN #{params.startDate, jdbcType=DATE} AND #{params.endDate, jdbcType=DATE}
        </if>
        <if test="params.startDate != null and params.endDate == null">
          <![CDATA[
          AND s.start_datetime >= #{params.startDate, jdbcType=DATE}
          ]]>
        </if>
        <if test="params.startDate == null and params.endDate != null">
          <![CDATA[
          AND s.start_datetime <= #{params.endDate, jdbcType=DATE}
          ]]>
        </if>
        <![CDATA[
          AND s.start_datetime >= SYSTIMESTAMP
        ]]>
  </select>

  <select id="getAppointmentDetailWithStatusByKeyword" parameterType="map" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{params.userId, jdbcType=NUMERIC}
        AND a.status = #{params.status, jdbcType=VARCHAR}
        AND (
            UPPER(d.first_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
            OR UPPER(d.last_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
            OR UPPER(d.hospital) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
            OR UPPER(sp.specialization_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
        )
  </select>

  <select id="getUpcomingAppointmentDetailWithStatusByKeyword" parameterType="map" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{params.userId, jdbcType=NUMERIC}
        AND a.status = #{params.status, jdbcType=VARCHAR}
        AND (
            UPPER(d.first_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
            OR UPPER(d.last_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
            OR UPPER(d.hospital) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
            OR UPPER(sp.specialization_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
        )
        <![CDATA[
          AND s.start_datetime >= SYSTIMESTAMP
        ]]>
  </select>

  <select id="getAppointmentDetailById" parameterType="map" resultMap="BaseResultMapDetail">
      SELECT a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
              s.slot_id, s.start_datetime as DATE_SLOT, s.start_datetime as START_TIME, s.end_datetime as END_TIME,
              d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
              sp.specialization_name, sp.specialization_id,
              i.invoice_id, i.invoice_name, i.status as invoice_status, i.CREATED_AT, i.UPDATED_AT
      FROM appointment a
      JOIN slot s ON s.slot_id = a.slot_id
      JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
      JOIN specialization sp ON ds.specialization_id = sp.specialization_id
      JOIN doctor d ON ds.doctor_id = d.doctor_id
      JOIN invoice i ON i.appointment_id = a.appointment_id
      WHERE 
        a.user_id = #{params.userId, jdbcType=NUMERIC}
        AND a.appointment_id = #{params.appointmentId, jdbcType=VARCHAR}
  </select>
</mapper>