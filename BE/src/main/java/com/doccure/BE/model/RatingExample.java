package com.doccure.BE.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RatingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public RatingExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRatingIdIsNull() {
            addCriterion("RATING_ID is null");
            return (Criteria) this;
        }

        public Criteria andRatingIdIsNotNull() {
            addCriterion("RATING_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRatingIdEqualTo(Long value) {
            addCriterion("RATING_ID =", value, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdNotEqualTo(Long value) {
            addCriterion("RATING_ID <>", value, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdGreaterThan(Long value) {
            addCriterion("RATING_ID >", value, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdGreaterThanOrEqualTo(Long value) {
            addCriterion("RATING_ID >=", value, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdLessThan(Long value) {
            addCriterion("RATING_ID <", value, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdLessThanOrEqualTo(Long value) {
            addCriterion("RATING_ID <=", value, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdIn(List<Long> values) {
            addCriterion("RATING_ID in", values, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdNotIn(List<Long> values) {
            addCriterion("RATING_ID not in", values, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdBetween(Long value1, Long value2) {
            addCriterion("RATING_ID between", value1, value2, "ratingId");
            return (Criteria) this;
        }

        public Criteria andRatingIdNotBetween(Long value1, Long value2) {
            addCriterion("RATING_ID not between", value1, value2, "ratingId");
            return (Criteria) this;
        }

        public Criteria andCommentRatingIsNull() {
            addCriterion("COMMENT_RATING is null");
            return (Criteria) this;
        }

        public Criteria andCommentRatingIsNotNull() {
            addCriterion("COMMENT_RATING is not null");
            return (Criteria) this;
        }

        public Criteria andCommentRatingEqualTo(String value) {
            addCriterion("COMMENT_RATING =", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingNotEqualTo(String value) {
            addCriterion("COMMENT_RATING <>", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingGreaterThan(String value) {
            addCriterion("COMMENT_RATING >", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENT_RATING >=", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingLessThan(String value) {
            addCriterion("COMMENT_RATING <", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingLessThanOrEqualTo(String value) {
            addCriterion("COMMENT_RATING <=", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingLike(String value) {
            addCriterion("COMMENT_RATING like", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingNotLike(String value) {
            addCriterion("COMMENT_RATING not like", value, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingIn(List<String> values) {
            addCriterion("COMMENT_RATING in", values, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingNotIn(List<String> values) {
            addCriterion("COMMENT_RATING not in", values, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingBetween(String value1, String value2) {
            addCriterion("COMMENT_RATING between", value1, value2, "commentRating");
            return (Criteria) this;
        }

        public Criteria andCommentRatingNotBetween(String value1, String value2) {
            addCriterion("COMMENT_RATING not between", value1, value2, "commentRating");
            return (Criteria) this;
        }

        public Criteria andRatingIsNull() {
            addCriterion("RATING is null");
            return (Criteria) this;
        }

        public Criteria andRatingIsNotNull() {
            addCriterion("RATING is not null");
            return (Criteria) this;
        }

        public Criteria andRatingEqualTo(Long value) {
            addCriterion("RATING =", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingNotEqualTo(Long value) {
            addCriterion("RATING <>", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingGreaterThan(Long value) {
            addCriterion("RATING >", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingGreaterThanOrEqualTo(Long value) {
            addCriterion("RATING >=", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingLessThan(Long value) {
            addCriterion("RATING <", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingLessThanOrEqualTo(Long value) {
            addCriterion("RATING <=", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingIn(List<Long> values) {
            addCriterion("RATING in", values, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingNotIn(List<Long> values) {
            addCriterion("RATING not in", values, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingBetween(Long value1, Long value2) {
            addCriterion("RATING between", value1, value2, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingNotBetween(Long value1, Long value2) {
            addCriterion("RATING not between", value1, value2, "rating");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("CREATED_AT is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("CREATED_AT is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("CREATED_AT =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("CREATED_AT <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("CREATED_AT >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_AT >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("CREATED_AT <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_AT <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("CREATED_AT in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("CREATED_AT not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("CREATED_AT between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_AT not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdIsNull() {
            addCriterion("APPOINTMENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdIsNotNull() {
            addCriterion("APPOINTMENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdEqualTo(Long value) {
            addCriterion("APPOINTMENT_ID =", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdNotEqualTo(Long value) {
            addCriterion("APPOINTMENT_ID <>", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdGreaterThan(Long value) {
            addCriterion("APPOINTMENT_ID >", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("APPOINTMENT_ID >=", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdLessThan(Long value) {
            addCriterion("APPOINTMENT_ID <", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdLessThanOrEqualTo(Long value) {
            addCriterion("APPOINTMENT_ID <=", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdIn(List<Long> values) {
            addCriterion("APPOINTMENT_ID in", values, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdNotIn(List<Long> values) {
            addCriterion("APPOINTMENT_ID not in", values, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdBetween(Long value1, Long value2) {
            addCriterion("APPOINTMENT_ID between", value1, value2, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdNotBetween(Long value1, Long value2) {
            addCriterion("APPOINTMENT_ID not between", value1, value2, "appointmentId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RATING
     *
     * @mbg.generated do_not_delete_during_merge Mon Oct 21 08:31:22 ICT 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RATING
     *
     * @mbg.generated Mon Oct 21 08:31:22 ICT 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}