<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doccure.BE.mapper.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.doccure.BE.model.Invoice">
    <id column="INVOICE_ID" jdbcType="NUMERIC" property="invoiceId" />
    <result column="INVOICE_NAME" jdbcType="VARCHAR" property="invoiceName" />
    <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="APPOINTMENT_ID" jdbcType="NUMERIC" property="appointmentId" />
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    INVOICE_ID, INVOICE_NAME, CREATED_AT, STATUS, APPOINTMENT_ID, UPDATED_AT
  </sql>
  <select id="selectByExample" parameterType="com.doccure.BE.model.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INVOICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from INVOICE
    where INVOICE_ID = #{invoiceId,jdbcType=NUMERIC}
  </select>

  <select id="selectByAppointmentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from INVOICE
    where APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from INVOICE
    where INVOICE_ID = #{invoiceId,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.doccure.BE.model.InvoiceExample">
    delete from INVOICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doccure.BE.model.Invoice"
  useGeneratedKeys="true" keyProperty="appointmentId" keyColumn="APPOINTMENT_ID">
    insert into INVOICE ( INVOICE_NAME, CREATED_AT, 
      STATUS, APPOINTMENT_ID
      )
    values ( #{invoiceName,jdbcType=VARCHAR}, SYSTIMESTAMP, 
      'PENDING', #{appointmentId,jdbcType=NUMERIC}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.doccure.BE.model.Invoice">
    insert into INVOICE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceId != null">
        INVOICE_ID,
      </if>
      <if test="invoiceName != null">
        INVOICE_NAME,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="appointmentId != null">
        APPOINTMENT_ID,
      </if>
      <if test="updatedAt != null">
        UPDATED_AT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoiceId != null">
        #{invoiceId,jdbcType=NUMERIC},
      </if>
      <if test="invoiceName != null">
        #{invoiceName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="appointmentId != null">
        #{appointmentId,jdbcType=NUMERIC},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doccure.BE.model.InvoiceExample" resultType="java.lang.Long">
    select count(*) from INVOICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update INVOICE
    <set>
      <if test="row.invoiceId != null">
        INVOICE_ID = #{row.invoiceId,jdbcType=NUMERIC},
      </if>
      <if test="row.invoiceName != null">
        INVOICE_NAME = #{row.invoiceName,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        CREATED_AT = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        STATUS = #{row.status,jdbcType=VARCHAR},
      </if>
      <if test="row.appointmentId != null">
        APPOINTMENT_ID = #{row.appointmentId,jdbcType=NUMERIC},
      </if>
      <if test="row.updatedAt != null">
        UPDATED_AT = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

<update id="updateStatusByInvoiceId">
    update INVOICE
    set 
      STATUS = #{status,jdbcType=VARCHAR},
      UPDATED_AT = SYSTIMESTAMP
    WHERE INVOICE_ID = #{invoiceId,jdbcType=NUMERIC}
  </update>

  <update id="updateByExample" parameterType="map">
    update INVOICE
    set INVOICE_ID = #{row.invoiceId,jdbcType=NUMERIC},
      INVOICE_NAME = #{row.invoiceName,jdbcType=VARCHAR},
      CREATED_AT = #{row.createdAt,jdbcType=TIMESTAMP},
      STATUS = #{row.status,jdbcType=VARCHAR},
      APPOINTMENT_ID = #{row.appointmentId,jdbcType=NUMERIC},
      UPDATED_AT = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doccure.BE.model.Invoice">
    update INVOICE
    <set>
      <if test="invoiceName != null">
        INVOICE_NAME = #{invoiceName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="appointmentId != null">
        APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC},
      </if>
      <if test="updatedAt != null">
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where INVOICE_ID = #{invoiceId,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doccure.BE.model.Invoice">
    update INVOICE
    set INVOICE_NAME = #{invoiceName,jdbcType=VARCHAR},
      CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      APPOINTMENT_ID = #{appointmentId,jdbcType=NUMERIC},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP}
    where INVOICE_ID = #{invoiceId,jdbcType=NUMERIC}
  </update>
  <!-- Invoice Detail -->
  <resultMap id="BaseResultMapDetail" type="com.doccure.BE.model.InvoiceDetail">
    <id column="INVOICE_ID" jdbcType="NUMERIC" property="invoiceId" />
    <result column="INVOICE_NAME" jdbcType="VARCHAR" property="invoiceName" />
    <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="APPOINTMENT_ID" jdbcType="NUMERIC" property="appointmentId" />
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />

    <association property="appointment" javaType="com.doccure.BE.model.Appointment">
      <id column="APPOINTMENT_ID" jdbcType="NUMERIC" property="appointmentId" />
      <result column="STATUS" jdbcType="VARCHAR" property="status" />
      <result column="PRICE" jdbcType="NUMERIC" property="price" />
      <result column="SLOT_ID" jdbcType="NUMERIC" property="slotId" />
      <result column="DOCTOR_SPECIALIZATION_ID" jdbcType="NUMERIC" property="doctorSpecializationId" />
      <result column="USER_ID" jdbcType="NUMERIC" property="userId" />
    </association>

    <association property="doctor" javaType="com.doccure.BE.model.Doctor">
      <id column="DOCTOR_ID" jdbcType="NUMERIC" property="doctorId" />
      <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
      <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
      <result column="EXPERIENCE" jdbcType="NUMERIC" property="experience" />
      <result column="HOSPITAL" jdbcType="VARCHAR" property="hospital" />
      <result column="AVATAR" jdbcType="VARCHAR" property="avatar" />
    </association>

     <association property="slot" javaType="com.doccure.BE.model.SlotAppointment">
        <id column="SLOT_ID" jdbcType="NUMERIC" property="slotId" />
        <result column="DATE_SLOT" jdbcType="TIMESTAMP" property="dateSlot" />
        <result column="START_TIME" jdbcType="TIMESTAMP" property="startTime" />
        <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
        <result column="PRICE" jdbcType="NUMERIC" property="price" />
        <result column="STATUS" jdbcType="VARCHAR" property="status" />
    </association>

    <association property="specialization" javaType="com.doccure.BE.model.Specialization">
        <id column="SPECIALIZATION_ID" jdbcType="NUMERIC" property="specializationId" />
      <result column="SPECIALIZATION_NAME" jdbcType="VARCHAR" property="specializationName" />
    </association>

    <collection property="invoiceItems" javaType="List" ofType="com.doccure.BE.model.InvoiceItem">
      <id column="ITEM_ID" jdbcType="NUMERIC" property="itemId" />
      <result column="ITEM_NAME" jdbcType="VARCHAR" property="itemName" />
      <result column="QUANTITY" jdbcType="NUMERIC" property="quantity" />
      <result column="invoice_item_price" jdbcType="NUMERIC" property="price" />
      <result column="INVOICE_ID" jdbcType="NUMERIC" property="invoiceId" />
    </collection>
  </resultMap>

  <select id="getInvoiceDetails" parameterType="Long" resultMap="BaseResultMapDetail">
    SELECT 
      i.invoice_id, i.invoice_name, i.status as invoice_status, i.created_at, i.updated_at,
      a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
      s.slot_id,s.start_datetime as DATE_SLOT, s.start_datetime as start_time, s.end_datetime as end_time,
      d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
      sp.specialization_name, sp.specialization_id,
      ii.item_id, ii.item_name, ii.quantity, ii.price as invoice_item_price
    FROM invoice i
    JOIN appointment a ON i.appointment_id = a.appointment_id
    JOIN invoice_item ii ON ii.invoice_id = i.invoice_id
    JOIN slot s ON s.slot_id = a.slot_id
    JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
    JOIN specialization sp ON ds.specialization_id = sp.specialization_id
    JOIN doctor d ON ds.doctor_id = d.doctor_id
    WHERE 
    a.user_id = #{userId,jdbcType=NUMERIC}
  </select>

  <select id="getInvoiceDetailById" resultMap="BaseResultMapDetail">
    SELECT 
      i.invoice_id, i.invoice_name, i.status as invoice_status, i.created_at, i.updated_at,
      a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
      s.slot_id,s.start_datetime as DATE_SLOT, s.start_datetime as start_time, s.end_datetime as end_time,
      d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
      sp.specialization_name, sp.specialization_id,
      ii.item_id, ii.item_name, ii.quantity, ii.price as invoice_item_price
    FROM invoice i
    JOIN appointment a ON i.appointment_id = a.appointment_id
    JOIN invoice_item ii ON ii.invoice_id = i.invoice_id
    JOIN slot s ON s.slot_id = a.slot_id
    JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
    JOIN specialization sp ON ds.specialization_id = sp.specialization_id
    JOIN doctor d ON ds.doctor_id = d.doctor_id
    WHERE 
    a.user_id = #{userId,jdbcType=NUMERIC}
    AND i.invoice_id= #{invoiceId,jdbcType=NUMERIC}
  </select>

   <select id="getInvoiceDetailByKeyword" resultMap="BaseResultMapDetail">
    SELECT 
      i.invoice_id, i.invoice_name, i.status as invoice_status, i.created_at, i.updated_at,
      a.appointment_id, a.status, a.slot_id, a.user_id, a.doctor_specialization_id, a.price,
      s.slot_id,s.start_datetime as DATE_SLOT, s.start_datetime as start_time, s.end_datetime as end_time,
      d.first_name, d.last_name, d.hospital, d.avatar, d.experience, d.doctor_id,
      sp.specialization_name, sp.specialization_id,
      ii.item_id, ii.item_name, ii.quantity, ii.price as invoice_item_price
    FROM invoice i
    JOIN appointment a ON i.appointment_id = a.appointment_id
    JOIN invoice_item ii ON ii.invoice_id = i.invoice_id
    JOIN slot s ON s.slot_id = a.slot_id
    JOIN doctor_specialization ds ON ds.doctor_specialization_id = a.doctor_specialization_id
    JOIN specialization sp ON ds.specialization_id = sp.specialization_id
    JOIN doctor d ON ds.doctor_id = d.doctor_id
    WHERE 
    a.user_id = #{params.userId,jdbcType=NUMERIC}
    AND (
      UPPER(d.first_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
      OR UPPER(d.last_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
      OR UPPER(d.hospital) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
      OR UPPER(sp.specialization_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
      OR UPPER(ii.item_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
      OR UPPER(i.invoice_name) LIKE '%' || UPPER(#{params.keyword,jdbcType=VARCHAR}) || '%'
    )

  </select>
</mapper>